const Conge = require('../models/Conge');

// üìå Ajouter une demande de cong√©
exports.ajouterConge = async (req, res) => {
  try {
    const { id_employee, date_debut, date_fin, type_conge, motif } = req.body;

    const newConge = new Conge({
      id_employee,
      date_debut,
      date_fin,
      type_conge,
      motif
    });

    await newConge.save();
    res.status(201).json({ message: 'Demande de cong√© ajout√©e avec succ√®s', conge: newConge });
  } catch (error) {
    console.error("Erreur lors de l'ajout du cong√© :", error);
    res.status(500).json({ error: "Erreur serveur lors de la cr√©ation de la demande de cong√©" });
  }
};

// üìå Lister toutes les demandes de cong√©
exports.listerConges = async (req, res) => {
  try {
    const conges = await Conge.find().populate('id_employee', 'nom prenom');
    res.status(200).json({ conges });
  } catch (error) {
    console.error("Erreur lors de la r√©cup√©ration des cong√©s :", error);
    res.status(500).json({ error: "Erreur serveur lors de la r√©cup√©ration des cong√©s" });
  }
};

// üìå R√©cup√©rer une demande de cong√© par ID
exports.getCongeById = async (req, res) => {
  try {
    const { id } = req.params;
    const conge = await Conge.findById(id).populate('id_employee', 'nom prenom');

    if (!conge) {
      return res.status(404).json({ error: "Demande de cong√© non trouv√©e" });
    }

    res.status(200).json({ conge });
  } catch (error) {
    console.error("Erreur lors de la r√©cup√©ration du cong√© :", error);
    res.status(500).json({ error: "Erreur serveur" });
  }
};

// üìå Modifier une demande de cong√©
exports.modifierConge = async (req, res) => {
  try {
    const { id } = req.params;
    const updatedConge = await Conge.findByIdAndUpdate(id, req.body, { new: true });

    if (!updatedConge) {
      return res.status(404).json({ error: "Demande de cong√© non trouv√©e" });
    }

    res.status(200).json({ message: "Demande de cong√© mise √† jour avec succ√®s", conge: updatedConge });
  } catch (error) {
    console.error("Erreur lors de la mise √† jour du cong√© :", error);
    res.status(500).json({ error: "Erreur serveur lors de la mise √† jour de la demande de cong√©" });
  }
};

// üìå Supprimer une demande de cong√©
exports.supprimerConge = async (req, res) => {
  try {
    const { id } = req.params;
    const conge = await Conge.findByIdAndDelete(id);

    if (!conge) {
      return res.status(404).json({ error: "Demande de cong√© non trouv√©e" });
    }

    res.status(200).json({ message: "Demande de cong√© supprim√©e avec succ√®s" });
  } catch (error) {
    console.error("Erreur lors de la suppression du cong√© :", error);
    res.status(500).json({ error: "Erreur serveur lors de la suppression de la demande de cong√©" });
  }
};

// üìå Approuver ou refuser un cong√©
exports.changerStatutConge = async (req, res) => {
  try {
    const { id } = req.params;
    const { status, approuve_par } = req.body;

    if (!['Approuv√©', 'Refus√©'].includes(status)) {
      return res.status(400).json({ error: "Statut invalide. Choisissez 'Approuv√©' ou 'Refus√©'." });
    }

    const conge = await Conge.findByIdAndUpdate(id, { status, approuve_par }, { new: true });

    if (!conge) {
      return res.status(404).json({ error: "Demande de cong√© non trouv√©e" });
    }

    res.status(200).json({ message: `Demande de cong√© ${status.toLowerCase()} avec succ√®s`, conge });
  } catch (error) {
    console.error("Erreur lors de la mise √† jour du statut du cong√© :", error);
    res.status(500).json({ error: "Erreur serveur lors du changement de statut du cong√©" });
  }
};
